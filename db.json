{
  "openapi": "3.0.0",
  "info": {
    "title": "rest-server RESTful API",
    "description": "Authentication, rest-server service, login policy",
    "version": "1.0.1"
  },
  "servers": [
    {
      "url": "https://virtserver.swaggerhub.com/moxamoxa256/rest-server/0.4.3",
      "description": "SwaggerHub API Auto Mocking"
    }
  ],
  "paths": {
    "/rest-server/login-page": {
      "get": {
        "tags": [
          "Authentication"
        ],
        "summary": "Get information which rest-server login page needed.",
        "description": "Skip login.\n\nUsed for SB327.\n",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response-login-page"
                },
                "example": {
                  "data": {
                    "should_set_default_account": false,
                    "login_message": "",
                    "server_name": "MGate 5119_6",
                    "reach_max_session": false
                  }
                }
              }
            }
          }
        }
      }
    },
    "/rest-server/login": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "summary": "Log in.",
        "description": "Response would carry token in cookie. User should use this token in request cookie for next API.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/login-page-req"
              },
              "example": {
                "account_name": "my_account",
                "account_password": "my_account@123"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Login success. Used for welcome block.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response-login-post"
                },
                "example": {
                  "data": {
                    "account_id": 1,
                    "account_name": "my_account",
                    "is_lifetime_expired": true,
                    "successful_login": [
                      {
                        "time": "2019-09-24T05:52:28",
                        "ip": "10.123.111.222"
                      }
                    ],
                    "failure_login": [
                      {
                        "time": "2019-09-24T05:52:28",
                        "ip": "10.123.4.5"
                      },
                      {
                        "time": "2019-09-24T05:52:28",
                        "ip": "10.123.4.6"
                      },
                      {
                        "time": "2019-09-24T05:52:28",
                        "ip": "10.123.4.6"
                      }
                    ],
                    "permissions": {
                      "OVERVIEW": "ro",
                      "SYSTEM_CONFIGURATION": "ro",
                      "PROTOCOL_SETTING": false,
                      "DIAGNOSTIC": "rw",
                      "SECURITY": "ro",
                      "MAINTENANCE": "rw",
                      "RESTART": "rw"
                    },
                    "groups": {
                      "id": 2,
                      "name": "my_group"
                    },
                    "token": "8f23efc0bb4e40119ed9974d78a3edcff4ca1cab88f68df7d96c0195219b6120"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Login fail. The reason may be account error, password error, or in lock status. Neither of them all show same failure message.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-login"
                }
              }
            }
          }
        }
      }
    },
    "/rest-server/logout": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "summary": "Log out.",
        "description": "Logout session by token.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "example": {
                  "data": {
                    "message": "success"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Logout fail. The token is not existed for any session.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/rest-server/auth-info": {
      "get": {
        "tags": [
          "Authentication"
        ],
        "summary": "Get auth information for account session.",
        "description": "Web front-end uses this API after successful login. Use for welcome block.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response-login-post"
                },
                "example": {
                  "data": {
                    "account_id": 1,
                    "account_name": "my_account",
                    "is_lifetime_expired": true,
                    "successful_login_time": "2019-09-24T05:52:28",
                    "failure_login_time": [
                      "2019-09-24T05:52:28",
                      "2019-09-24T05:52:28",
                      "2019-09-24T05:52:28"
                    ],
                    "permissions": {
                      "OVERVIEW": "ro",
                      "SYSTEM_CONFIGURATION": "ro",
                      "PROTOCOL_SETTING": false,
                      "DIAGNOSTIC": "rw",
                      "SECURITY": "ro",
                      "MAINTENANCE": "rw",
                      "RESTART": "rw"
                    },
                    "groups": {
                      "id": 2,
                      "name": "my_group"
                    },
                    "token": "8f23efc0bb4e40119ed9974d78a3edcff4ca1cab88f68df7d96c0195219b6120"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/rest-server/session-expiry": {
      "get": {
        "tags": [
          "Authentication"
        ],
        "summary": "Check if login session is expired.",
        "description": "**Only this API not extend the session expiry date.**\n\nExcept this API, other APIs extend the session expiry date when called.\n\nWhen session is expired, user would be logged out.\n",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/session-expiration"
                }
              }
            }
          },
          "403": {
            "description": "Error. Session has been expired.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Authentication"
        ],
        "summary": "Extend session expiry date.",
        "description": "Most APIs extend the expiry date. If user want to do nothing but extend the expiry date, call this API.",
        "responses": {
          "200": {
            "description": "Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/session-expiration"
                }
              }
            }
          },
          "403": {
            "description": "Error. Session has been expired.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/rest-server/login-message": {
      "get": {
        "tags": [
          "Login policy setting"
        ],
        "summary": "Get login message setting.",
        "responses": {
          "200": {
            "description": "Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response-login-message"
                },
                "example": {
                  "data": {
                    "login_message": "",
                    "login_failure_message": "The account or password you entered is not correct. (Your account will be temporarily locked if excessive tried.)"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Login policy setting"
        ],
        "summary": "Change login policy setting.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/login-message"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response-login-message"
                }
              }
            }
          },
          "400": {
            "description": "Error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/rest-server/lockout-policy": {
      "get": {
        "tags": [
          "Login policy setting"
        ],
        "summary": "Get login lockout setting.",
        "responses": {
          "200": {
            "description": "Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response-lockout-policy"
                }
              }
            }
          },
          "400": {
            "description": "Error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Login policy setting"
        ],
        "summary": "Change login lockout setting.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/lockout-policy"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response-lockout-policy"
                }
              }
            }
          },
          "400": {
            "description": "Error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/rest-server/login-session": {
      "get": {
        "tags": [
          "Login policy setting"
        ],
        "summary": "Get login session setting.",
        "responses": {
          "200": {
            "description": "Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response-login-session"
                },
                "example": {
                  "data": {
                    "max_login_user": 5,
                    "auto_logout_time": 1440
                  }
                }
              }
            }
          },
          "400": {
            "description": "Error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Login policy setting"
        ],
        "summary": "patch login session setting.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/login-session"
              },
              "example": {
                "max_login_user": 5,
                "auto_logout_time": 1440
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response-login-session"
                },
                "example": {
                  "data": {
                    "max_login_user": 5,
                    "auto_logout_time": 1440
                  }
                }
              }
            }
          },
          "400": {
            "description": "Error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/rest-server/service": {
      "get": {
        "tags": [
          "Service Enable"
        ],
        "summary": "Get service enable.",
        "responses": {
          "200": {
            "description": "Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response-rest-server-service"
                },
                "example": {
                  "data": {
                    "http": true,
                    "https": false
                  }
                }
              }
            }
          },
          "400": {
            "description": "Error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Service Enable"
        ],
        "summary": "patch login session.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/rest-server-service"
              },
              "example": {
                "http": true,
                "https": false
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response-rest-server-service"
                },
                "example": {
                  "data": {
                    "http": true,
                    "https": false
                  }
                }
              }
            }
          },
          "400": {
            "description": "Error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "error": {
        "required": [
          "message"
        ],
        "properties": {
          "error": {
            "$ref": "#/components/schemas/error_error"
          }
        }
      },
      "response-login-session": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/login-session"
          }
        }
      },
      "login-session": {
        "type": "object",
        "properties": {
          "max_login_user": {
            "maximum": 10,
            "minimum": 1,
            "type": "number"
          },
          "auto_logout_time": {
            "maximum": 1440,
            "minimum": 1,
            "type": "number",
            "description": "(min)"
          }
        }
      },
      "response-rest-server-service": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/rest-server-service"
          }
        }
      },
      "rest-server-service": {
        "type": "object",
        "properties": {
          "http": {
            "type": "boolean",
            "description": "http service enable"
          },
          "https": {
            "type": "boolean",
            "description": "https service enable"
          }
        }
      },
      "session-expiration": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/sessionexpiration_data"
          }
        }
      },
      "response-login-page": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/login-page"
          }
        }
      },
      "login-page": {
        "type": "object",
        "properties": {
          "should_set_default_account": {
            "type": "boolean",
            "description": "Set to default account"
          },
          "login_message": {
            "type": "string",
            "description": "login message",
            "example": ""
          },
          "server_name": {
            "type": "string",
            "description": "server name",
            "example": "MGate 5119_6"
          },
          "reach_max_session": {
            "type": "boolean",
            "description": "If users has occupied max session count.",
            "example": false
          }
        }
      },
      "response-login-post": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/login-post"
          }
        }
      },
      "login-page-req": {
        "type": "object",
        "properties": {
          "account_name": {
            "type": "string",
            "description": "account name"
          },
          "account_password": {
            "type": "string",
            "description": "account password"
          }
        }
      },
      "error-login": {
        "type": "object",
        "properties": {
          "error": {
            "$ref": "#/components/schemas/errorlogin_error"
          }
        }
      },
      "login-post": {
        "type": "object",
        "properties": {
          "account_id": {
            "type": "integer",
            "description": "account id",
            "example": 1
          },
          "account_name": {
            "maxLength": 32,
            "minLength": 1,
            "type": "string",
            "description": "account name",
            "example": "my_account",
            "default": ""
          },
          "is_lifetime_expired": {
            "type": "boolean",
            "description": "whether the login time has expired",
            "default": true
          },
          "successful_login": {
            "$ref": "#/components/schemas/loginpost_successful_login"
          },
          "failure_login": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/loginpost_failure_login"
            }
          },
          "permissions": {
            "$ref": "#/components/schemas/permissions-result"
          },
          "groups": {
            "$ref": "#/components/schemas/group-only-id-name"
          },
          "token": {
            "type": "string",
            "description": "Session token, same as the token in cookie."
          }
        }
      },
      "permissions-result": {
        "type": "object",
        "properties": {
          "OVERVIEW": {
            "type": "string",
            "description": "overview permission",
            "example": "ro"
          },
          "SYSTEM_CONFIGURATION": {
            "type": "string",
            "description": "system configuration permission",
            "example": "ro"
          },
          "PROTOCOL_SETTING": {
            "type": "string",
            "description": "protocol setting permission",
            "example": "false"
          },
          "DIAGNOSTIC": {
            "type": "string",
            "description": "diagnostic permission",
            "example": "rw"
          },
          "SECURITY": {
            "type": "string",
            "description": "security permission",
            "example": "ro"
          },
          "MAINTENANCE": {
            "type": "string",
            "description": "maintenance permission",
            "example": "rw"
          },
          "RESTART": {
            "type": "string",
            "description": "restart permission",
            "example": "rw"
          }
        }
      },
      "group-only-id-name": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "group id",
            "example": 2
          },
          "name": {
            "maxLength": 32,
            "minLength": 1,
            "type": "string",
            "description": "group name",
            "example": "my_group",
            "default": ""
          }
        }
      },
      "response-lockout-policy": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/lockout-policy"
          }
        }
      },
      "lockout-policy": {
        "type": "object",
        "properties": {
          "enable_lockout": {
            "type": "boolean",
            "description": "Enable login failure lockout",
            "default": true
          },
          "max_retry_times": {
            "maximum": 10,
            "minimum": 1,
            "type": "integer",
            "description": "Max failure retry times",
            "default": 5
          },
          "enable_reset_counter": {
            "type": "boolean",
            "description": "Enable reset failure counter. false means never reset counter.",
            "default": false
          },
          "reset_failure_period": {
            "maximum": 1440,
            "minimum": 1,
            "type": "integer",
            "description": "When reset failure counter enable, max failure retry reset period. (min)",
            "default": 10
          },
          "lockout_time": {
            "maximum": 60,
            "minimum": 1,
            "type": "integer",
            "description": "Lockout time (min)",
            "default": 10
          }
        }
      },
      "response-login-message": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/login-message"
          }
        }
      },
      "login-message": {
        "type": "object",
        "properties": {
          "login_message": {
            "maximum": 256,
            "minimum": 0,
            "type": "string",
            "description": "Login message on login page.",
            "default": ""
          },
          "login_failure_message": {
            "maximum": 256,
            "minimum": 0,
            "type": "string",
            "description": "Login message on login page.",
            "default": "The account or password you entered is not correct. (Your account will be temporarily locked if excessive tried.)"
          }
        }
      },
      "error_error": {
        "type": "object",
        "properties": {
          "code": {
            "type": "number",
            "example": -1
          },
          "message": {
            "type": "string",
            "example": "Invalid parameters"
          }
        }
      },
      "sessionexpiration_data": {
        "type": "object",
        "properties": {
          "is_expired": {
            "type": "boolean",
            "description": "is_expired=true would never happen, because when expire, http status code is 403, and this json struct would not occur.",
            "example": false
          },
          "remaining_time": {
            "type": "integer",
            "description": "remaining time before logout. (sec)",
            "example": 84171
          }
        }
      },
      "errorlogin_error": {
        "type": "object",
        "properties": {
          "code": {
            "type": "integer",
            "example": -1
          },
          "message": {
            "type": "string",
            "example": "Invalid parameters"
          },
          "login_failure_message": {
            "type": "string",
            "example": "The account or password you entered is incorrect. (Your account will be temporarily locked if excessive tried.)"
          },
          "reach_max_session": {
            "type": "boolean",
            "example": false
          }
        }
      },
      "loginpost_successful_login": {
        "type": "object",
        "properties": {
          "time": {
            "type": "string",
            "description": "successful login time",
            "example": "2019-09-24T05:52:28"
          },
          "ip": {
            "type": "string",
            "description": "successful login ip",
            "example": "123.123.123.123"
          }
        }
      },
      "loginpost_failure_login": {
        "maxItems": 3,
        "type": "object",
        "properties": {
          "time": {
            "type": "string",
            "description": "failure login time",
            "example": "2019-09-24T05:52:28"
          },
          "ip": {
            "type": "string",
            "description": "failure login ip",
            "example": "123.123.123.123"
          }
        }
      }
    }
  }
}
